using System.Collections; using System.Collections.Generic; using UnityEngine;  public class ActiveOnlyDuringSomeGameStates : MonoBehaviour {      public enum ePauseEffect     {         ignorePause,         activeWhenPaused,         activeWhenNotPaused     }      // eGameStates is a System.Flags enum, so many values can be stored in a single field.     [EnumFlags] // This uses the EnumFlagsAttribute from EnumFlagsAttributePropertyDrawer     public GameControl.eGameState activeStates = GameControl.eGameState.all;     public ePauseEffect pauseEffect = ePauseEffect.ignorePause;     [Tooltip("Check editorOnly to make this GameObject active only in the Unity editor.")]     public bool editorOnly = false;      // Use this for initialization     public virtual void Awake()     {          // Also make sure to set self based on the current state when awakened         DetermineActive();          GameControl.GAME_STATE_CHANGE_DELEGATE += DetermineActive;     }      protected void OnDestroy()     {         GameControl.GAME_STATE_CHANGE_DELEGATE -= DetermineActive;     }       protected virtual void DetermineActive()     {         bool shouldBeActive = (activeStates & GameControl.GAME_STATE) == GameControl.GAME_STATE;          gameObject.SetActive(shouldBeActive);     }  }  